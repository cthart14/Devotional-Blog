// <auto-generated />
using System;
using JF_Services.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JF_Services.Migrations
{
    [DbContext(typeof(JFDbContext))]
    [Migration("20250430193346_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("JF_Services.Models.CommentModel", b =>
                {
                    b.Property<int>("COMMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("COMMENTERUSER_ID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("COMMENT_DATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("COMMENT_TEXT")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("POST_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PostModelPOST_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProfileModelPROFILE_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("REPLY_TO_COMMENT_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("COMMENT_ID");

                    b.HasIndex("COMMENTERUSER_ID");

                    b.HasIndex("PostModelPOST_ID");

                    b.HasIndex("ProfileModelPROFILE_ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("JF_Services.Models.FollowModel", b =>
                {
                    b.Property<int>("FOLLOW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FOLLOWERUSER_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FOLLOWINGUSER_ID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FOLLOW_DATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileModelPROFILE_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProfileModelPROFILE_ID1")
                        .HasColumnType("INTEGER");

                    b.HasKey("FOLLOW_ID");

                    b.HasIndex("FOLLOWERUSER_ID");

                    b.HasIndex("FOLLOWINGUSER_ID");

                    b.HasIndex("ProfileModelPROFILE_ID");

                    b.HasIndex("ProfileModelPROFILE_ID1");

                    b.ToTable("Follows");
                });

            modelBuilder.Entity("JF_Services.Models.LikeModel", b =>
                {
                    b.Property<int>("LIKE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("COMMENT_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LIKERUSER_ID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LIKE_DATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("POST_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PostModelPOST_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("LIKE_ID");

                    b.HasIndex("LIKERUSER_ID");

                    b.HasIndex("PostModelPOST_ID");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("JF_Services.Models.PostModel", b =>
                {
                    b.Property<int>("POST_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CAPTION")
                        .HasColumnType("TEXT");

                    b.Property<string>("POST_DATA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("POST_DATE")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileModelPROFILE_ID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("USER_ID")
                        .HasColumnType("INTEGER");

                    b.HasKey("POST_ID");

                    b.HasIndex("ProfileModelPROFILE_ID");

                    b.HasIndex("USER_ID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("JF_Services.Models.ProfileModel", b =>
                {
                    b.Property<int>("PROFILE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BIO")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("TEXT");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FIRST_NAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LAST_NAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PASSWORD")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PHONE")
                        .HasColumnType("TEXT");

                    b.Property<string>("PROFILE_PIC")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UPDATED_DATE")
                        .HasColumnType("TEXT");

                    b.Property<int>("USER_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("USER_NAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PROFILE_ID");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("JF_Services.Models.UserModel", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PROFILE_PIC")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostModelPOST_ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("USER_NAME")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("USER_ID");

                    b.HasIndex("PostModelPOST_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JF_Services.Models.CommentModel", b =>
                {
                    b.HasOne("JF_Services.Models.UserModel", "COMMENTER")
                        .WithMany()
                        .HasForeignKey("COMMENTERUSER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JF_Services.Models.PostModel", null)
                        .WithMany("COMMENTS")
                        .HasForeignKey("PostModelPOST_ID");

                    b.HasOne("JF_Services.Models.ProfileModel", null)
                        .WithMany("COMMENTS")
                        .HasForeignKey("ProfileModelPROFILE_ID");

                    b.Navigation("COMMENTER");
                });

            modelBuilder.Entity("JF_Services.Models.FollowModel", b =>
                {
                    b.HasOne("JF_Services.Models.UserModel", "FOLLOWER")
                        .WithMany()
                        .HasForeignKey("FOLLOWERUSER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JF_Services.Models.UserModel", "FOLLOWING")
                        .WithMany()
                        .HasForeignKey("FOLLOWINGUSER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JF_Services.Models.ProfileModel", null)
                        .WithMany("FOLLOWERS")
                        .HasForeignKey("ProfileModelPROFILE_ID");

                    b.HasOne("JF_Services.Models.ProfileModel", null)
                        .WithMany("FOLLOWINGS")
                        .HasForeignKey("ProfileModelPROFILE_ID1");

                    b.Navigation("FOLLOWER");

                    b.Navigation("FOLLOWING");
                });

            modelBuilder.Entity("JF_Services.Models.LikeModel", b =>
                {
                    b.HasOne("JF_Services.Models.UserModel", "LIKER")
                        .WithMany()
                        .HasForeignKey("LIKERUSER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JF_Services.Models.PostModel", null)
                        .WithMany("LIKES")
                        .HasForeignKey("PostModelPOST_ID");

                    b.Navigation("LIKER");
                });

            modelBuilder.Entity("JF_Services.Models.PostModel", b =>
                {
                    b.HasOne("JF_Services.Models.ProfileModel", null)
                        .WithMany("POSTS")
                        .HasForeignKey("ProfileModelPROFILE_ID");

                    b.HasOne("JF_Services.Models.UserModel", "USER")
                        .WithMany()
                        .HasForeignKey("USER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USER");
                });

            modelBuilder.Entity("JF_Services.Models.UserModel", b =>
                {
                    b.HasOne("JF_Services.Models.PostModel", null)
                        .WithMany("TAGGED_USERS")
                        .HasForeignKey("PostModelPOST_ID");
                });

            modelBuilder.Entity("JF_Services.Models.PostModel", b =>
                {
                    b.Navigation("COMMENTS");

                    b.Navigation("LIKES");

                    b.Navigation("TAGGED_USERS");
                });

            modelBuilder.Entity("JF_Services.Models.ProfileModel", b =>
                {
                    b.Navigation("COMMENTS");

                    b.Navigation("FOLLOWERS");

                    b.Navigation("FOLLOWINGS");

                    b.Navigation("POSTS");
                });
#pragma warning restore 612, 618
        }
    }
}
